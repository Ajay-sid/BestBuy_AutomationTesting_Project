<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-G0IG718" failures="0" tests="3" name="Invalid Url Test" time="0.077" errors="0" timestamp="2024-02-04T03:18:54 IST">
  <testcase classname="scratchTest.InvalidUrlTest" name="@BeforeMethod launchBrowser" time="-1.706996934788E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest, Method, Object[], ITestResult&amp;gt; into a @BeforeMethod annotated launchBrowser.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @BeforeMethod annotated launchBrowser.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod launchBrowser -->
  <testcase classname="base.ProjectSpec" name="@AfterMethod ccloseWindow" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod ccloseWindow -->
  <testcase classname="scratchTest.InvalidUrlTest" name="@BeforeMethod launchBrowser" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchBrowser -->
  <testcase classname="base.ProjectSpec" name="@AfterMethod ccloseWindow" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod ccloseWindow -->
  <testcase classname="scratchTest.InvalidUrlTest" name="@BeforeMethod launchBrowser" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchBrowser -->
  <testcase classname="base.ProjectSpec" name="@AfterMethod ccloseWindow" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod ccloseWindow -->
  <testcase classname="scratchTest.InvalidUrlTest" name="testMissingProtocol" time="0.0">
    <skipped/>
  </testcase> <!-- testMissingProtocol -->
  <testcase classname="scratchTest.InvalidUrlTest" name="testInvalidProtocol" time="0.0">
    <skipped/>
  </testcase> <!-- testInvalidProtocol -->
  <testcase classname="scratchTest.InvalidUrlTest" name="testOtherValidDomain" time="0.0">
    <skipped/>
  </testcase> <!-- testOtherValidDomain -->
</testsuite> <!-- Invalid Url Test -->
